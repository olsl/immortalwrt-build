name: ImmortalWRT Build

on:
  workflow_dispatch:
    inputs:
      dtb_file:
        description: 'DTB file name'
        required: true
        default: 'wma301v2.dts'
      target:
        description: 'Target device'
        required: true
        default: 'mediatek/mt7981'
      subtarget:
        description: 'Subtarget'
        required: true
        default: 'generic'

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout ImmortalWRT source
        uses: actions/checkout@v3
        with:
          repository: immortalwrt/immortalwrt
          path: immortalwrt
          fetch-depth: 1
          
      - name: Checkout custom DTB
        uses: actions/checkout@v3
        with:
          path: custom-files
          fetch-depth: 1
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib \
            gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev \
            file wget curl time

      - name: Copy custom DTB
        run: |
          mkdir -p immortalwrt/target/linux/mediatek/dts/
          cp custom-files/wma301v2.dts immortalwrt/target/linux/mediatek/dts/
          
      - name: Update DTS Makefile
        run: |
          cd immortalwrt/target/linux/mediatek/image
          echo 'define Device/wma301v2' >> mt7981.mk
          echo '  $(call Device/factory_image)' >> mt7981.mk
          echo '  DEVICE_VENDOR := MediaTek' >> mt7981.mk
          echo '  DEVICE_MODEL := WMA301V2' >> mt7981.mk
          echo '  DEVICE_DTS := wma301v2' >> mt7981.mk
          echo '  SUPPORTED_DEVICES += wma301v2' >> mt7981.mk
          echo 'endef' >> mt7981.mk
          echo 'TARGET_DEVICES += wma301v2' >> mt7981.mk

      - name: Prepare build environment
        run: |
          cd immortalwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
      - name: Configure build
        run: |
          cd immortalwrt
          cat > .config << 'EOF'
          CONFIG_TARGET_mediatek=y
          CONFIG_TARGET_mediatek_mt7981=y
          CONFIG_TARGET_mediatek_mt7981_generic=y
          CONFIG_TARGET_mediatek_mt7981_generic_DEVICE_wma301v2=y
          CONFIG_DEVEL=y
          CONFIG_TOOLCHAINOPTS=y
          CONFIG_GCC_USE_VERSION_11=y
          CONFIG_GCC_VERSION_11=y
          CONFIG_ALL_KMODS=y
          CONFIG_ALL=y
          CONFIG_PACKAGE_kmod-usb3=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_kmod-rt2800-usb=y
          CONFIG_PACKAGE_kmod-rt2x00-usb=y
          CONFIG_PACKAGE_wireless-tools=y
          CONFIG_PACKAGE_wpa-supplicant=y
          CONFIG_PACKAGE_hostapd=y
          CONFIG_PACKAGE_dnsmasq=y
          CONFIG_PACKAGE_dropbear=y
          CONFIG_PACKAGE_openssh-sftp-server=y
          CONFIG_PACKAGE_luci=y
          CONFIG_PACKAGE_luci-ssl=y
          CONFIG_PACKAGE_luci-app-firewall=y
          CONFIG_PACKAGE_luci-app-opkg=y
          CONFIG_PACKAGE_luci-base=y
          CONFIG_PACKAGE_luci-lib-ip=y
          CONFIG_PACKAGE_luci-lib-jsonc=y
          CONFIG_PACKAGE_luci-lib-nixio=y
          CONFIG_PACKAGE_luci-mod-admin-full=y
          CONFIG_PACKAGE_luci-mod-network=y
          CONFIG_PACKAGE_luci-mod-status=y
          CONFIG_PACKAGE_luci-mod-system=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_luci-proto-ppp=y
          CONFIG_PACKAGE_luci-ssl-openssl=y
          CONFIG_PACKAGE_luci-theme-bootstrap=y
          EOF
          
      - name: Build firmware
        run: |
          cd immortalwrt
          make defconfig
          make -j$(nproc) || make -j1 V=s
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: immortalwrt-firmware
          path: |
            immortalwrt/bin/targets/mediatek/mt7981/*.bin
            immortalwrt/bin/targets/mediatek/mt7981/*.img
            immortalwrt/bin/targets/mediatek/mt7981/*.tar.gz
