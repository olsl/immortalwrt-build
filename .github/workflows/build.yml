name: Build wma301 V2.0

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Source
      run: |
        git clone --depth 1 -b openwrt-23.05 https://github.com/immortalwrt/immortalwrt.git firmware

    - name: Create DTS Dir
      run: |
        mkdir -p firmware/target/linux/mediatek/files-5.15/arch/arm64/boot/dts/mediatek

    - name: Write DTS File
      run: |
        cat > firmware/target/linux/mediatek/files-5.15/arch/arm64/boot/dts/mediatek/wma301-v2.dts << 'EOF'
/dts-v1/;
/ {
    compatible = "mediatek,mt7981-spim-snand-rfb";
    model = "wma301 V2.0";

    cpus {
        #address-cells = <1>;
        #size-cells = <0>;

        cpu@0 {
            device_type = "cpu";
            compatible = "arm,cortex-a53";
            reg = <0>;
            enable-method = "psci";
        };

        cpu@1 {
            device_type = "cpu";
            compatible = "arm,cortex-a53";
            reg = <1>;
            enable-method = "psci";
        };
    };

    chosen {
        bootargs = "console=ttyS0,115200n1 earlycon=uart8250,mmio32,0x11002000";
    };

    memory {
        reg = <0x00 0x40000000 0x00 0x10000000>;
    };

    &snfi {
        status = "okay";
    };

    &spi0 {
        status = "okay";
    };

    &ethernet {
        status = "okay";
    };

    &xhci {
        status = "okay";
    };
};
EOF

    - name: Register Device
      run: |
        echo "" >> firmware/target/linux/mediatek/image/mt798x.mk
        echo "define Device/wma301-v2" >> firmware/target/linux/mediatek/image/mt798x.mk
        echo "  DEVICE_VENDOR := Custom" >> firmware/target/linux/mediatek/image/mt798x.mk
        echo "  DEVICE_MODEL := wma301 V2.0" >> firmware/target/linux/mediatek/image/mt798x.mk
        echo "  DEVICE_DTS := wma301-v2" >> firmware/target/linux/mediatek/image/mt798x.mk
        echo "  DEVICE_PACKAGES := kmod-usb-core kmod-usb-ohci kmod-usb2 block-mount p910nd samba4-server luci luci-ssl luci-i18n-base-zh-cn odhcp6c odhcpd-ipv6only wpad-basic-wolfssl" >> firmware/target/linux/mediatek/image/mt798x.mk
        echo "  IMAGE_SIZE := 65536k" >> firmware/target/linux/mediatek/image/mt798x.mk
        echo "  IMAGES += factory.bin sysupgrade.bin" >> firmware/target/linux/mediatek/image/mt798x.mk
        echo "  IMAGE/sysupgrade.bin := \$(sysupgrade_bin) | check-size \$\$(IMAGE_SIZE)" >> firmware/target/linux/mediatek/image/mt798x.mk
        echo "  IMAGE/factory.bin := \$(sysupgrade_bin) | check-size \$\$(IMAGE_SIZE)" >> firmware/target/linux/mediatek/image/mt798x.mk
        echo "endef" >> firmware/target/linux/mediatek/image/mt798x.mk
        echo "TARGET_DEVICES += wma301-v2" >> firmware/target/linux/mediatek/image/mt798x.mk

    - name: Generate Config
      run: |
        cat > firmware/.config << 'EOF'
CONFIG_TARGET_mediatek=y
CONFIG_TARGET_mt798x=y
CONFIG_TARGET_mt798x_DEVICE_wma301-v2=y
CONFIG_PACKAGE_luci=y
CONFIG_PACKAGE_luci-ssl=y
CONFIG_PACKAGE_luci-i18n-base-zh-cn=y
CONFIG_PACKAGE_p910nd=y
CONFIG_PACKAGE_samba4-server=y
CONFIG_PACKAGE_odhcp6c=y
CONFIG_PACKAGE_odhcpd-ipv6only=y
CONFIG_PACKAGE_kmod-usb-core=y
CONFIG_PACKAGE_kmod-usb-ohci=y
CONFIG_PACKAGE_kmod-usb2=y
CONFIG_PACKAGE_block-mount=y
CONFIG_PACKAGE_wpad-basic-wolfssl=y
CONFIG_DEVEL=y
EOF

    - name: Update Feeds
      working-directory: firmware
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Start Build
      working-directory: firmware
      run: |
        make defconfig
        make download -j$(nproc)
        make -j$(nproc)

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        path: firmware/bin/targets/mediatek/mt798x/*.bin
        if-no-files-found: error
