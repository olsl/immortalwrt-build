name: Build ImmortalWrt for Custom Device

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    env:
      DEVICE_DTS_DIR: dts
      TARGET: mediatek
      SUBTARGET: mt798x
      IMAGE_SIZE: 65536k
      KERNEL_SIZE: 16128k
      REPO_URL: https://github.com/immortalwrt/immortalwrt.git
      BRANCH: openwrt-23.05

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Find DTS File
      id: find_dts
      run: |
        if [ ! -d "${{ env.DEVICE_DTS_DIR }}" ]; then
          echo "❌ Directory '/${{ env.DEVICE_DTS_DIR }}' not found!"
          exit 1
        fi
        dts_file=$(find "${{ env.DEVICE_DTS_DIR }}" -name "*.dts" | head -n1)
        if [ -z "$dts_file" ]; then
          echo "❌ No .dts file found in /${{ env.DEVICE_DTS_DIR }}/"
          exit 1
        fi
        device_name=$(basename "$dts_file" .dts)
        echo "device_name=$device_name" >> "$GITHUB_OUTPUT"
        echo "device_dts_path=$dts_file" >> "$GITHUB_OUTPUT"

    - name: Setup Source Code
      run: |
        mkdir -p "$HOME/openwrt/source"
        git clone --depth 1 -b ${{ env.BRANCH }} ${{ env.REPO_URL }} "$HOME/openwrt/source"

    - name: Copy DTS to Target Path
      run: |
        dst_dir="$HOME/openwrt/source/target/linux/mediatek/files-5.15/arch/arm64/boot/dts/mediatek"
        mkdir -p "$dst_dir"
        cp "${{ steps.find_dts.outputs.device_dts_path }}" "$dst_dir/${{ steps.find_dts.outputs.device_name }}.dts"

    - name: Check If Device Already Defined
      id: check_device
      run: |
        mk_file="$HOME/openwrt/source/target/linux/mediatek/image/mt798x.mk"
        if grep -q "define Device/${{ steps.find_dts.outputs.device_name }}" "$mk_file"; then
          echo "already_supported=true" >> "$GITHUB_OUTPUT"
        else
          echo "already_supported=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Register New Device
      if: steps.check_device.outputs.already_supported == 'false'
      run: |
        name='${{ steps.find_dts.outputs.device_name }}'
        file="$HOME/openwrt/source/target/linux/mediatek/image/mt798x.mk"
        cat >> "$file" << EOF

# Auto-registered by CI
define Device/$name
  DEVICE_VENDOR := Custom
  DEVICE_MODEL := \$$(DEVICE_VENDOR) $name
  DEVICE_DTS := $name
  DEVICE_PACKAGES := kmod-usb-core kmod-usb-ohci kmod-usb2 kmod-usb-ledtrig-usbport block-mount e2fsprogs fdisk usbutils lsblk printenv p910nd samba4-server samba4-client kmod-fs-ntfs ntfs-3g mount.ntfs luci luci-ssl luci-i18n-base-zh-cn odhcp6c odhcpd-ipv6only wpad-basic-wolfssl hostapd-common kmod-ipt-nat6
  KERNEL_SIZE := ${{ env.KERNEL_SIZE }}
  IMAGE_SIZE := ${{ env.IMAGE_SIZE }}
  IMAGES += factory.bin sysupgrade.bin
  IMAGE/factory.bin := \$\$(sysupgrade_bin) | check-size \$\$\$(IMAGE_SIZE)
  IMAGE/sysupgrade.bin := \$\$(sysupgrade_bin) | check-size \$\$\$(IMAGE_SIZE)
endef
TARGET_DEVICES += $name
EOF

    - name: Generate .config
      run: |
        dir="$HOME/openwrt/source"
        cd "$dir"
        cat > .config << EOF
CONFIG_TARGET_${{ env.TARGET }}=y
CONFIG_TARGET_${{ env.SUBTARGET }}=y
CONFIG_TARGET_${{ env.SUBTARGET }}_DEVICE_${{ steps.find_dts.outputs.device_name }}=y
CONFIG_DEVEL=y
CONFIG_BUILD_LOG=y
CONFIG_CCACHE=y
CONFIG_PACKAGE_luci=y
CONFIG_PACKAGE_luci-ssl=y
CONFIG_PACKAGE_luci-theme-bootstrap=y
CONFIG_PACKAGE_luci-i18n-base-zh-cn=y
CONFIG_PACKAGE_kmod-usb-core=y
CONFIG_PACKAGE_kmod-usb-ohci=y
CONFIG_PACKAGE_kmod-usb2=y
CONFIG_PACKAGE_kmod-usb-ledtrig-usbport=y
CONFIG_PACKAGE_usbutils=y
CONFIG_PACKAGE_lsusb=y
CONFIG_PACKAGE_kmod-usb-printer=y
CONFIG_PACKAGE_p910nd=y
CONFIG_PACKAGE_block-mount=y
CONFIG_PACKAGE_e2fsprogs=y
CONFIG_PACKAGE_fdisk=y
CONFIG_PACKAGE_kmod-fs-ext4=y
CONFIG_PACKAGE_kmod-fs-ntfs=y
CONFIG_PACKAGE_ntfs-3g=y
CONFIG_PACKAGE_mount.ntfs=y
CONFIG_PACKAGE_samba4-server=y
CONFIG_PACKAGE_samba4-client=y
CONFIG_PACKAGE_odhcp6c=y
CONFIG_PACKAGE_odhcpd-ipv6only=y
CONFIG_PACKAGE_kmod-ipt-nat6=y
CONFIG_PACKAGE_kmod-ip6tables=y
CONFIG_PACKAGE_hostapd-common=y
CONFIG_PACKAGE_wpad-basic-wolfssl=y
CONFIG_PACKAGE_iwinfo=y
CONFIG_PACKAGE_curl=y
CONFIG_PACKAGE_iperf3=y
CONFIG_PACKAGE_ping6=y
CONFIG_PACKAGE_netstat=y
CONFIG_PACKAGE_tcpdump=y
EOF

    - name: Update Feeds
      working-directory: $HOME/openwrt/source
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Start Build
      working-directory: $HOME/openwrt/source
      run: |
        make defconfig
        make -j$(nproc)

    - name: Upload Firmware
      uses: actions/upload-artifact@v3
      with:
        path: $HOME/openwrt/source/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/*.bin
        if-no-files-found: error
